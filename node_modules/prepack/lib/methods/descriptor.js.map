{"version":3,"sources":["../../src/methods/descriptor.js"],"names":["cloneDescriptor","clearDescriptor","copyDescriptor","equalDescriptors","d","undefined","clone","writable","enumerable","configurable","value","get","set","from","to","hasOwnProperty","d1","d2"],"mappings":";;;;;QAagBA,e,GAAAA,e;QAOAC,e,GAAAA,e;QASAC,c,GAAAA,c;QAUAC,gB,GAAAA,gB;AA1BT,SAASH,eAAT,CAAyBI,CAAzB,EAAkE;AACvE,MAAIA,MAAMC,SAAV,EAAqB,OAAOA,SAAP;AACrB,MAAIC,QAAQ,EAAZ;AACAJ,iBAAeE,CAAf,EAAkBE,KAAlB;AACA,SAAOA,KAAP;AACD,C,CAlBD;;;;;;;;;AAoBO,SAASL,eAAT,CAAyBG,CAAzB,EAAwC;AAC7C,SAAOA,EAAEG,QAAT;AACA,SAAOH,EAAEI,UAAT;AACA,SAAOJ,EAAEK,YAAT;AACA,SAAOL,EAAEM,KAAT;AACA,SAAON,EAAEO,GAAT;AACA,SAAOP,EAAEQ,GAAT;AACD;;AAEM,SAASV,cAAT,CAAwBW,IAAxB,EAA0CC,EAA1C,EAA0D;AAC/D,MAAID,KAAKE,cAAL,CAAoB,UAApB,CAAJ,EAAqCD,GAAGP,QAAH,GAAcM,KAAKN,QAAnB;AACrC,MAAIM,KAAKE,cAAL,CAAoB,YAApB,CAAJ,EAAuCD,GAAGN,UAAH,GAAgBK,KAAKL,UAArB;AACvC,MAAIK,KAAKE,cAAL,CAAoB,cAApB,CAAJ,EAAyCD,GAAGL,YAAH,GAAkBI,KAAKJ,YAAvB;AACzC,MAAII,KAAKE,cAAL,CAAoB,OAApB,CAAJ,EAAkCD,GAAGJ,KAAH,GAAWG,KAAKH,KAAhB;AAClC,MAAIG,KAAKE,cAAL,CAAoB,KAApB,CAAJ,EAAgCD,GAAGH,GAAH,GAASE,KAAKF,GAAd;AAChC,MAAIE,KAAKE,cAAL,CAAoB,KAApB,CAAJ,EAAgCD,GAAGF,GAAH,GAASC,KAAKD,GAAd;AACjC;;AAED;AACO,SAAST,gBAAT,CAA0Ba,EAA1B,EAA0CC,EAA1C,EAA0D;AAC/D,MAAID,GAAGD,cAAH,CAAkB,UAAlB,CAAJ,EAAmC;AACjC,QAAI,CAACE,GAAGF,cAAH,CAAkB,UAAlB,CAAL,EAAoC,OAAO,KAAP;AACpC,QAAIC,GAAGT,QAAH,KAAgBU,GAAGV,QAAvB,EAAiC,OAAO,KAAP;AAClC;AACD,MAAIS,GAAGD,cAAH,CAAkB,YAAlB,CAAJ,EAAqC;AACnC,QAAI,CAACE,GAAGF,cAAH,CAAkB,YAAlB,CAAL,EAAsC,OAAO,KAAP;AACtC,QAAIC,GAAGR,UAAH,KAAkBS,GAAGT,UAAzB,EAAqC,OAAO,KAAP;AACtC;AACD,MAAIQ,GAAGD,cAAH,CAAkB,cAAlB,CAAJ,EAAuC;AACrC,QAAI,CAACE,GAAGF,cAAH,CAAkB,cAAlB,CAAL,EAAwC,OAAO,KAAP;AACxC,QAAIC,GAAGP,YAAH,KAAoBQ,GAAGR,YAA3B,EAAyC,OAAO,KAAP;AAC1C;AACD,MAAIO,GAAGD,cAAH,CAAkB,OAAlB,CAAJ,EAAgC;AAC9B,QAAI,CAACE,GAAGF,cAAH,CAAkB,OAAlB,CAAL,EAAiC,OAAO,KAAP;AAClC;AACD,MAAIC,GAAGD,cAAH,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,QAAI,CAACE,GAAGF,cAAH,CAAkB,KAAlB,CAAL,EAA+B,OAAO,KAAP;AAC/B,QAAIC,GAAGL,GAAH,KAAWM,GAAGN,GAAlB,EAAuB,OAAO,KAAP;AACxB;AACD,MAAIK,GAAGD,cAAH,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,QAAI,CAACE,GAAGF,cAAH,CAAkB,KAAlB,CAAL,EAA+B,OAAO,KAAP;AAC/B,QAAIC,GAAGJ,GAAH,KAAWK,GAAGL,GAAlB,EAAuB,OAAO,KAAP;AACxB;AACD,SAAO,IAAP;AACD","file":"descriptor.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Descriptor } from \"../types.js\";\n\nexport function cloneDescriptor(d: void | Descriptor): void | Descriptor {\n  if (d === undefined) return undefined;\n  let clone = {};\n  copyDescriptor(d, clone);\n  return clone;\n}\n\nexport function clearDescriptor(d: Descriptor) {\n  delete d.writable;\n  delete d.enumerable;\n  delete d.configurable;\n  delete d.value;\n  delete d.get;\n  delete d.set;\n}\n\nexport function copyDescriptor(from: Descriptor, to: Descriptor) {\n  if (from.hasOwnProperty(\"writable\")) to.writable = from.writable;\n  if (from.hasOwnProperty(\"enumerable\")) to.enumerable = from.enumerable;\n  if (from.hasOwnProperty(\"configurable\")) to.configurable = from.configurable;\n  if (from.hasOwnProperty(\"value\")) to.value = from.value;\n  if (from.hasOwnProperty(\"get\")) to.get = from.get;\n  if (from.hasOwnProperty(\"set\")) to.set = from.set;\n}\n\n// does not check if the contents of value properties are the same\nexport function equalDescriptors(d1: Descriptor, d2: Descriptor) {\n  if (d1.hasOwnProperty(\"writable\")) {\n    if (!d2.hasOwnProperty(\"writable\")) return false;\n    if (d1.writable !== d2.writable) return false;\n  }\n  if (d1.hasOwnProperty(\"enumerable\")) {\n    if (!d2.hasOwnProperty(\"enumerable\")) return false;\n    if (d1.enumerable !== d2.enumerable) return false;\n  }\n  if (d1.hasOwnProperty(\"configurable\")) {\n    if (!d2.hasOwnProperty(\"configurable\")) return false;\n    if (d1.configurable !== d2.configurable) return false;\n  }\n  if (d1.hasOwnProperty(\"value\")) {\n    if (!d2.hasOwnProperty(\"value\")) return false;\n  }\n  if (d1.hasOwnProperty(\"get\")) {\n    if (!d2.hasOwnProperty(\"get\")) return false;\n    if (d1.get !== d2.get) return false;\n  }\n  if (d1.hasOwnProperty(\"set\")) {\n    if (!d2.hasOwnProperty(\"set\")) return false;\n    if (d1.set !== d2.set) return false;\n  }\n  return true;\n}\n"]}