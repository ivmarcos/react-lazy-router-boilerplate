{"version":3,"sources":["../../../src/intrinsics/ecma262/BooleanPrototype.js"],"names":["realm","obj","$BooleanData","intrinsics","false","defineNativeMethod","context","b","value"],"mappings":";;;;;;kBAee,UAAUA,KAAV,EAAwBC,GAAxB,EAAgD;AAC7D;AACAA,MAAIC,YAAJ,GAAmBF,MAAMG,UAAN,CAAiBC,KAApC;;AAEA;AACAH,MAAII,kBAAJ,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,UAACC,OAAD,EAAa;AACjD;AACA,QAAIC,IAAI,0BAAiBP,KAAjB,EAAwBM,OAAxB,CAAR;;AAEA;AACA,WAAO,uBAAgBN,KAAhB,EAAuBO,EAAEC,KAAF,GAAU,MAAV,GAAmB,OAA1C,CAAP;AACD,GAND;;AAQA;AACAP,MAAII,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqC,UAACC,OAAD,EAAa;AAChD;AACA,WAAO,0BAAiBN,KAAjB,EAAwBM,OAAxB,CAAP;AACD,GAHD;AAID,C;;AArBD;;AACA","file":"BooleanPrototype.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ObjectValue, StringValue } from \"../../values/index.js\";\nimport { thisBooleanValue } from \"../../methods/to.js\";\n\nexport default function (realm: Realm, obj: ObjectValue): void {\n  // ECMA262 19.3.1\n  obj.$BooleanData = realm.intrinsics.false;\n\n  // ECMA262 19.3.3.3\n  obj.defineNativeMethod(\"toString\", 0, (context) => {\n    // 1. Let b be ? thisBooleanValue(this value).\n    let b = thisBooleanValue(realm, context);\n\n    // 2. If b is true, return \"true\"; else return \"false\".\n    return new StringValue(realm, b.value ? \"true\" : \"false\");\n  });\n\n  // ECMA262 19.3.3.4\n  obj.defineNativeMethod(\"valueOf\", 0, (context) => {\n    // 1. Return ? thisBooleanValue(this value).\n    return thisBooleanValue(realm, context);\n  });\n}\n"]}