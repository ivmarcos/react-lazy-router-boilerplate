{"version":3,"sources":["../../../src/intrinsics/ecma262/ObjectPrototype.js"],"names":["realm","obj","defineNativeMethod","context","V","P","throwIfNotConcrete","O","mightBeObject","intrinsics","false","throwIfNotConcreteObject","$GetPrototypeOf","true","desc","$GetOwnProperty","value","enumerable","undefined","defineNativeProperty","ObjectProto_toString","$DefineOwnProperty","get","set","proto","status","$SetPrototypeOf","createErrorThrowCompletion","TypeError"],"mappings":";;;;;;ypBAAA;;;;;;;;;kBAoBe,UAAUA,KAAV,EAAwBC,GAAxB,EAAgD;AAC7D;AACAA,MAAIC,kBAAJ,CAAuB,gBAAvB,EAAyC,CAAzC,EAA4C,UAACC,OAAD,QAAkB;AAAA;AAAA,QAAPC,CAAO;;AAC5D;AACA,QAAIC,IAAI,uBAAcL,KAAd,EAAqBI,EAAEE,kBAAF,EAArB,CAAR;;AAEA;AACA,QAAIC,IAAI,yBAAgBP,KAAhB,EAAuBG,OAAvB,CAAR;;AAEA;AACA,WAAO,wBAAiBH,KAAjB,EAAwB,yBAAeA,KAAf,EAAsBO,CAAtB,EAAyBF,CAAzB,CAAxB,CAAP;AACD,GATD;;AAWA;AACAJ,MAAIC,kBAAJ,CAAuB,eAAvB,EAAwC,CAAxC,EAA2C,UAACC,OAAD,SAAkB;AAAA;AAAA,QAAPC,CAAO;;AAC3D;AACA,QAAI,CAACA,EAAEI,aAAF,EAAL,EAAwB,OAAOR,MAAMS,UAAN,CAAiBC,KAAxB;AACxBN,QAAIA,EAAEO,wBAAF,EAAJ;;AAEA;AACA,QAAIJ,IAAI,yBAAgBP,KAAhB,EAAuBG,OAAvB,CAAR;;AAEA;AACA,WAAO,IAAP,EAAa;AACX;AACAC,UAAIA,EAAEQ,eAAF,EAAJ;;AAEA;AACA,UAAIR,6BAAJ,EAA4B,OAAOJ,MAAMS,UAAN,CAAiBC,KAAxB;;AAE5B;AACA,UAAI,gCAAiBV,KAAjB,EAAwBO,CAAxB,EAA2BH,CAA3B,MAAkC,IAAtC,EAA4C,OAAOJ,MAAMS,UAAN,CAAiBI,IAAxB;AAC7C;;AAED,6BAAU,KAAV;AACD,GArBD;;AAuBA;AACAZ,MAAIC,kBAAJ,CAAuB,sBAAvB,EAA+C,CAA/C,EAAkD,UAACC,OAAD,SAAkB;AAAA;AAAA,QAAPC,CAAO;;AAClE;AACA,QAAIC,IAAI,uBAAcL,KAAd,EAAqBI,EAAEE,kBAAF,EAArB,CAAR;;AAEA;AACA,QAAIC,IAAI,yBAAgBP,KAAhB,EAAuBG,OAAvB,CAAR;;AAEA;AACA,QAAIW,OAAOP,EAAEQ,eAAF,CAAkBV,CAAlB,CAAX;;AAEA;AACA,QAAI,CAACS,IAAL,EAAW,OAAOd,MAAMS,UAAN,CAAiBC,KAAxB;AACX,6CAA4BI,KAAKE,KAAjC;;AAEA;AACA,WAAOF,KAAKG,UAAL,KAAoBC,SAApB,GACHlB,MAAMS,UAAN,CAAiBS,SADd,GAEH,wBAAiBlB,KAAjB,EAAwBc,KAAKG,UAA7B,CAFJ;AAGD,GAlBD;;AAoBA;AACAhB,MAAIC,kBAAJ,CAAuB,gBAAvB,EAAyC,CAAzC,EAA4C,UAACC,OAAD,EAAa;AACvD;AACA,QAAII,IAAIJ,OAAR;;AAEA;AACA,WAAO,kBAAOH,KAAP,EAAcO,CAAd,EAAiB,UAAjB,CAAP;AACD,GAND;;AAQA;AACAN,MAAIkB,oBAAJ,CAAyB,UAAzB,EAAqCnB,MAAMS,UAAN,CAAiBW,oBAAtD;;AAEA;AACAnB,MAAIC,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqC,UAACC,OAAD,EAAa;AAChD;AACA,WAAO,yBAAgBH,KAAhB,EAAuBG,OAAvB,CAAP;AACD,GAHD;;AAKAF,MAAIoB,kBAAJ,CAAuB,WAAvB,EAAoC;AAClC;AACAC,SAAK,+BAAwBtB,KAAxB,EAA+B,MAA/B,EAAuC,eAAvC,EAAwD,CAAxD,EAA2D,UAACG,OAAD,EAAa;AAC3E;AACA,UAAII,IAAI,kBAASP,KAAT,EAAgBG,QAAQG,kBAAR,EAAhB,CAAR;;AAEA;AACA,aAAOC,EAAEK,eAAF,EAAP;AACD,KANI,CAF6B;;AAUlC;AACAW,SAAK,+BAAwBvB,KAAxB,EAA+B,MAA/B,EAAuC,eAAvC,EAAwD,CAAxD,EAA2D,UAACG,OAAD,SAAsB;AAAA;AAAA,UAAXqB,KAAW;;AACpF;AACA,UAAIjB,IAAI,sCAAuBP,KAAvB,EAA8BG,OAA9B,CAAR;;AAEA;AACA,UAAI,CAAC,gCAAsBH,KAAtB,EAA6BwB,KAA7B,uCAAL,EAAkE,OAAOxB,MAAMS,UAAN,CAAiBS,SAAxB;;AAElE;AACA,UAAI,CAACX,EAAEC,aAAF,EAAL,EAAwB,OAAOR,MAAMS,UAAN,CAAiBS,SAAxB;AACxBX,UAAIA,EAAEI,wBAAF,EAAJ;;AAEA;AACA,UAAIc,SAASlB,EAAEmB,eAAF,CAAoBF,MAAMlB,kBAAN,EAApB,CAAb;;AAEA;AACA,UAAI,CAACmB,MAAL,EAAa;AACX,cAAMzB,MAAM2B,0BAAN,CAAiC3B,MAAMS,UAAN,CAAiBmB,SAAlD,EAA6D,oBAA7D,CAAN;AACD;;AAED;AACA,aAAO5B,MAAMS,UAAN,CAAiBS,SAAxB;AACD,KArBI;AAX6B,GAApC;AAkCD,C;;AAtHD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA","file":"ObjectPrototype.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue, ObjectValue, BooleanValue, NullValue } from \"../../values/index.js\";\nimport { ToPropertyKey, ToObject, ToObjectPartial } from \"../../methods/to.js\";\nimport { SameValuePartial, RequireObjectCoercible } from \"../../methods/abstract.js\";\nimport { HasOwnProperty, HasSomeCompatibleType } from \"../../methods/has.js\";\nimport { Invoke } from \"../../methods/call.js\";\nimport { ThrowIfMightHaveBeenDeleted } from \"../../methods/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function (realm: Realm, obj: ObjectValue): void {\n  // ECMA262 19.1.3.2\n  obj.defineNativeMethod(\"hasOwnProperty\", 1, (context, [V]) => {\n    // 1. Let P be ? ToPropertyKey(V).\n    let P = ToPropertyKey(realm, V.throwIfNotConcrete());\n\n    // 2. Let O be ? ToObject(this value).\n    let O = ToObjectPartial(realm, context);\n\n    // 3. Return ? HasOwnProperty(O, P).\n    return new BooleanValue(realm, HasOwnProperty(realm, O, P));\n  });\n\n  // ECMA262 19.1.3.3\n  obj.defineNativeMethod(\"isPrototypeOf\", 1, (context, [V]) => {\n    // 1. If Type(V) is not Object, return false.\n    if (!V.mightBeObject()) return realm.intrinsics.false;\n    V = V.throwIfNotConcreteObject();\n\n    // 2. Let O be ? ToObject(this value).\n    let O = ToObjectPartial(realm, context);\n\n    // 3. Repeat\n    while (true) {\n      // a. Let V be ? V.[[GetPrototypeOf]]().\n      V = V.$GetPrototypeOf();\n\n      // b. If V is null, return false.\n      if (V instanceof NullValue) return realm.intrinsics.false;\n\n      // c. If SameValue(O, V) is true, return true.\n      if (SameValuePartial(realm, O, V) === true) return realm.intrinsics.true;\n    }\n\n    invariant(false);\n  });\n\n  // ECMA262 19.1.3.4\n  obj.defineNativeMethod(\"propertyIsEnumerable\", 1, (context, [V]) => {\n    // 1. Let P be ? ToPropertyKey(V).\n    let P = ToPropertyKey(realm, V.throwIfNotConcrete());\n\n    // 2. Let O be ? ToObject(this value).\n    let O = ToObjectPartial(realm, context);\n\n    // 3. Let desc be ? O.[[GetOwnProperty]](P).\n    let desc = O.$GetOwnProperty(P);\n\n    // 4. If desc is undefined, return false.\n    if (!desc) return realm.intrinsics.false;\n    ThrowIfMightHaveBeenDeleted(desc.value);\n\n    // 5. Return the value of desc.[[Enumerable]].\n    return desc.enumerable === undefined\n      ? realm.intrinsics.undefined\n      : new BooleanValue(realm, desc.enumerable);\n  });\n\n  // ECMA262 19.1.3.5\n  obj.defineNativeMethod(\"toLocaleString\", 0, (context) => {\n    // 1. Let O be the this value.\n    let O = context;\n\n    // 2. Return ? Invoke(O, \"toString\").\n    return Invoke(realm, O, \"toString\");\n  });\n\n  // ECMA262 19.1.3.6\n  obj.defineNativeProperty(\"toString\", realm.intrinsics.ObjectProto_toString);\n\n  // ECMA262 19.1.3.7\n  obj.defineNativeMethod(\"valueOf\", 0, (context) => {\n    // 1. Return ? ToObject(this value).\n    return ToObjectPartial(realm, context);\n  });\n\n  obj.$DefineOwnProperty(\"__proto__\", {\n    // B.2.2.1.1\n    get: new NativeFunctionValue(realm, \"TODO\", \"get __proto__\", 0, (context) => {\n      // 1. Let O be ? ToObject(this value).\n      let O = ToObject(realm, context.throwIfNotConcrete());\n\n      // 2. Return ? O.[[GetPrototypeOf]]().\n      return O.$GetPrototypeOf();\n    }),\n\n    // B.2.2.1.2\n    set: new NativeFunctionValue(realm, \"TODO\", \"set __proto__\", 1, (context, [proto]) => {\n      // 1. Let O be ? RequireObjectCoercible(this value).\n      let O = RequireObjectCoercible(realm, context);\n\n      // 2. If Type(proto) is neither Object nor Null, return undefined.\n      if (!HasSomeCompatibleType(realm, proto, ObjectValue, NullValue)) return realm.intrinsics.undefined;\n\n      // 3. If Type(O) is not Object, return undefined.\n      if (!O.mightBeObject()) return realm.intrinsics.undefined;\n      O = O.throwIfNotConcreteObject();\n\n      // 4. Let status be ? O.[[SetPrototypeOf]](proto).\n      let status = O.$SetPrototypeOf(((proto.throwIfNotConcrete(): any): ObjectValue | NullValue));\n\n      // 5. If status is false, throw a TypeError exception.\n      if (!status) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"couldn't set proto\");\n      }\n\n      // 6. Return undefined.\n      return realm.intrinsics.undefined;\n    })\n  });\n}\n"]}