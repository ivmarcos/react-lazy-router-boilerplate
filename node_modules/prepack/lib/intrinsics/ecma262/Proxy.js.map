{"version":3,"sources":["../../../src/intrinsics/ecma262/Proxy.js"],"names":["realm","func","context","argCount","NewTarget","target","handler","createErrorThrowCompletion","intrinsics","TypeError","defineNativeMethod","p","revoker","createRevoker","$RevocableProxy","result","ObjectPrototype","F","undefined","null","$ProxyTarget","$ProxyHandler"],"mappings":";;;;;;ypBAAA;;;;;;;;;kBAkBe,UAAUA,KAAV,EAA6C;AAC1D;AACA,MAAIC,OAAO,+BAAwBD,KAAxB,EAA+B,OAA/B,EAAwC,OAAxC,EAAiD,CAAjD,EAAoD,UAACE,OAAD,QAA6BC,QAA7B,EAAuCC,SAAvC,EAAqD;AAAA;AAAA,QAA1CC,MAA0C;AAAA,QAAlCC,OAAkC;;AAClH;AACA,QAAI,CAACF,SAAL,EAAgB;AACd,YAAMJ,MAAMO,0BAAN,CAAiCP,MAAMQ,UAAN,CAAiBC,SAAlD,CAAN;AACD;;AAED;AACA,WAAO,wBAAYT,KAAZ,EAAmBK,MAAnB,EAA2BC,OAA3B,CAAP;AACD,GARU,CAAX;;AAUA;AACAL,OAAKS,kBAAL,CAAwB,WAAxB,EAAqC,CAArC,EAAwC,UAACR,OAAD,SAAgC;AAAA;AAAA,QAArBG,MAAqB;AAAA,QAAbC,OAAa;;AACtE;AACA,QAAIK,IAAI,wBAAYX,KAAZ,EAAmBK,MAAnB,EAA2BC,OAA3B,CAAR;;AAEA;AACA,QAAIM,UAAUC,eAAd;;AAEA;AACAD,YAAQE,eAAR,GAA0BH,CAA1B;;AAEA;AACA,QAAII,SAAS,0BAAaf,KAAb,EAAoBA,MAAMQ,UAAN,CAAiBQ,eAArC,CAAb;;AAEA;AACA,oCAAmBhB,KAAnB,EAA0Be,MAA1B,EAAkC,OAAlC,EAA2CJ,CAA3C;;AAEA;AACA,oCAAmBX,KAAnB,EAA0Be,MAA1B,EAAkC,QAAlC,EAA4CH,OAA5C;;AAEA;AACA,WAAOG,MAAP;AACD,GArBD;;AAuBA,WAASF,aAAT,GAAyB;AACvB,QAAII,IAAI,+BAAwBjB,KAAxB,EAA+BkB,SAA/B,EAA0CA,SAA1C,EAAqD,CAArD,EAAwD,UAAChB,OAAD,SAA6BC,QAA7B,EAAuCC,SAAvC,EAAqD;AAAA;AAAA,UAA1CC,MAA0C;AAAA,UAAlCC,OAAkC;;AACnH;AACA,UAAIK,IAAIM,EAAEH,eAAV;;AAEA;AACA,UAAIH,6BAAJ,EAA4B,OAAOX,MAAMQ,UAAN,CAAiBU,SAAxB;;AAE5B;AACA,sDAA+BlB,KAA/B,EAAsCiB,CAAtC,EAAyC,iBAAzC,EAA4DH,eAA5D,GAA8Ed,MAAMQ,UAAN,CAAiBW,IAA/F;;AAEA;AACA,+BAAUR,8BAAV,EAAmC,gBAAnC;;AAEA;AACA,sDAA+BX,KAA/B,EAAsCW,CAAtC,EAAyC,cAAzC,EAAyDS,YAAzD,GAAwEpB,MAAMQ,UAAN,CAAiBW,IAAzF;;AAEA;AACA,sDAA+BnB,KAA/B,EAAsCW,CAAtC,EAAyC,cAAzC,EAAyDU,aAAzD,GAAyErB,MAAMQ,UAAN,CAAiBW,IAA1F;;AAEA;AACA,aAAOnB,MAAMQ,UAAN,CAAiBU,SAAxB;AACD,KArBO,EAqBL,KArBK,CAAR;;AAuBA,WAAOD,CAAP;AACD;;AAED,SAAOhB,IAAP;AACD,C;;AAtED;;AACA;;AACA;;AACA;;AACA","file":"Proxy.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { ProxyValue, NullValue, NativeFunctionValue } from \"../../values/index.js\";\nimport { ObjectCreate, CreateDataProperty } from \"../../methods/create.js\";\nimport { ProxyCreate } from \"../../methods/proxy.js\";\nimport { ThrowIfInternalSlotNotWritable } from \"../../methods/properties.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function (realm: Realm): NativeFunctionValue {\n  // ECMA262 26.2.1.1\n  let func = new NativeFunctionValue(realm, \"Proxy\", \"Proxy\", 2, (context, [target, handler], argCount, NewTarget) => {\n    // 1. If NewTarget is undefined, throw a TypeError exception.\n    if (!NewTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Return ? ProxyCreate(target, handler).\n    return ProxyCreate(realm, target, handler);\n  });\n\n  // ECMA262 26.2.2.1\n  func.defineNativeMethod(\"revocable\", 2, (context, [target, handler]) => {\n    // 1. Let p be ? ProxyCreate(target, handler).\n    let p = ProxyCreate(realm, target, handler);\n\n    // 2. Let revoker be a new built-in function object as defined in 26.2.2.1.1.\n    let revoker = createRevoker();\n\n    // 3. Set the [[RevocableProxy]] internal slot of revoker to p.\n    revoker.$RevocableProxy = p;\n\n    // 4. Let result be ObjectCreate(%ObjectPrototype%).\n    let result = ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n    // 5. Perform CreateDataProperty(result, \"proxy\", p).\n    CreateDataProperty(realm, result, \"proxy\", p);\n\n    // 6. Perform CreateDataProperty(result, \"revoke\", revoker).\n    CreateDataProperty(realm, result, \"revoke\", revoker);\n\n    // 7. Return result.\n    return result;\n  });\n\n  function createRevoker() {\n    let F = new NativeFunctionValue(realm, undefined, undefined, 0, (context, [target, handler], argCount, NewTarget) => {\n      // 1. Let p be the value of F's [[RevocableProxy]] internal slot.\n      let p = F.$RevocableProxy;\n\n      // 2. If p is null, return undefined.\n      if (p instanceof NullValue) return realm.intrinsics.undefined;\n\n      // 3. Set the value of F's [[RevocableProxy]] internal slot to null.\n      ThrowIfInternalSlotNotWritable(realm, F, \"$RevocableProxy\").$RevocableProxy = realm.intrinsics.null;\n\n      // 4. Assert: p is a Proxy object.\n      invariant(p instanceof ProxyValue, \"expected proxy\");\n\n      // 5. Set the [[ProxyTarget]] internal slot of p to null.\n      ThrowIfInternalSlotNotWritable(realm, p, \"$ProxyTarget\").$ProxyTarget = realm.intrinsics.null;\n\n      // 6. Set the [[ProxyHandler]] internal slot of p to null.\n      ThrowIfInternalSlotNotWritable(realm, p, \"$ProxyTarget\").$ProxyHandler = realm.intrinsics.null;\n\n      // 7. Return undefined.\n      return realm.intrinsics.undefined;\n    }, false);\n\n    return F;\n  }\n\n  return func;\n}\n"]}