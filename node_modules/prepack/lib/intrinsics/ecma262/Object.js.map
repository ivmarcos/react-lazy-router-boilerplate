{"version":3,"sources":["../../../src/intrinsics/ecma262/Object.js"],"names":["realm","func","context","argCount","NewTarget","value","intrinsics","ObjectPrototype","defineNativeMethod","target","sources","to","to_must_be_partial","length","nextSource","keys","frm","frm_was_partial","isPartial","makeNotPartial","$OwnPropertyKeys","makePartial","to_keys","createIntrospectionErrorThrowCompletion","nextKey","desc","$GetOwnProperty","enumerable","propValue","O","Properties","createErrorThrowCompletion","TypeError","obj","throwIfNotConcrete","mightBeUndefined","P","Attributes","mightBeObject","throwIfNotObject","key","throwIfNotConcreteObject","status","ownKeys","descriptors","undefined","descriptor","$GetPrototypeOf","value1","value2","false","true","nameList","$PreventExtensions","isCompatibleWith","MOBILE_JSC_VERSION","proto","$SetPrototypeOf"],"mappings":"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","file":"Object.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue } from \"../../values/index.js\";\nimport { AbstractValue, ObjectValue, NullValue, UndefinedValue, StringValue, BooleanValue, SymbolValue } from \"../../values/index.js\";\nimport {\n  ToObject,\n  ToObjectPartial,\n  ToPropertyKey,\n  ToPropertyDescriptor,\n  IsExtensible,\n  EnumerableOwnProperties,\n  GetOwnPropertyKeys,\n  Get,\n  CreateArrayFromList,\n  CreateDataProperty,\n  ObjectCreate,\n  OrdinaryCreateFromConstructor,\n  RequireObjectCoercible,\n  SameValuePartial,\n  Set,\n  ObjectDefineProperties,\n  DefinePropertyOrThrow,\n  FromPropertyDescriptor,\n  TestIntegrityLevel,\n  SetIntegrityLevel,\n  HasSomeCompatibleType,\n  ThrowIfMightHaveBeenDeleted,\n} from \"../../methods/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function (realm: Realm): NativeFunctionValue {\n  // ECMA262 19.1.1.1\n  let func = new NativeFunctionValue(realm, \"Object\", \"Object\", 1, (context, [value], argCount, NewTarget) => {\n    // 1. If NewTarget is neither undefined nor the active function, then\n    if (NewTarget && NewTarget !== func) {\n      // a. Return ? OrdinaryCreateFromConstructor(NewTarget, \"%ObjectPrototype%\").\n      return OrdinaryCreateFromConstructor(realm, NewTarget, \"ObjectPrototype\");\n    }\n\n    // 2. If value is null, undefined or not supplied, return ObjectCreate(%ObjectPrototype%).\n    if (HasSomeCompatibleType(realm, value, NullValue, UndefinedValue)) {\n      return ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n    }\n\n    // 3. Return ToObject(value).\n    return ToObjectPartial(realm, value);\n  });\n\n  // ECMA262 19.1.2.1\n  func.defineNativeMethod(\"assign\", 2, (context, [target, ...sources]) => {\n    // 1. Let to be ? ToObject(target).\n    let to = ToObjectPartial(realm, target);\n    let to_must_be_partial = false;\n\n    // 2. If only one argument was passed, return to.\n    if (!sources.length) return to;\n\n    // 3. Let sources be the List of argument values starting with the second argument.\n    sources;\n\n    // 4. For each element nextSource of sources, in ascending index order,\n    for (let nextSource of sources) {\n      let keys, frm;\n\n      // a. If nextSource is undefined or null, let keys be a new empty List.\n      if (HasSomeCompatibleType(realm, nextSource, NullValue, UndefinedValue)) {\n        continue;\n      } else { // b. Else,\n        // i. Let from be ToObject(nextSource).\n        frm = ToObjectPartial(realm, nextSource);\n        let frm_was_partial = frm.isPartial();\n        if (frm_was_partial) {\n          to_must_be_partial = true;\n          frm.makeNotPartial();\n        }\n\n        // ii. Let keys be ? from.[[OwnPropertyKeys]]().\n        keys = frm.$OwnPropertyKeys();\n        if (frm_was_partial) frm.makePartial();\n      }\n      if (to_must_be_partial) {\n        // Only OK if to is an empty object because nextSource might have\n        // properties at runtime that will overwrite current properties in to.\n        // For now, just throw if this happens.\n        let to_keys = to.$OwnPropertyKeys();\n        if (to_keys.length !== 0)\n          throw AbstractValue.createIntrospectionErrorThrowCompletion(nextSource);\n      }\n\n      invariant(frm, \"from required\");\n      invariant(keys, \"keys required\");\n\n      // c. Repeat for each element nextKey of keys in List order,\n      for (let nextKey of keys) {\n        // i. Let desc be ? from.[[GetOwnProperty]](nextKey).\n        let desc = frm.$GetOwnProperty(nextKey);\n\n        // ii. If desc is not undefined and desc.[[Enumerable]] is true, then\n        if (desc && desc.enumerable) {\n          ThrowIfMightHaveBeenDeleted(desc.value);\n\n          // 1. Let propValue be ? Get(from, nextKey).\n          let propValue = Get(realm, frm, nextKey);\n\n          // 2. Perform ? Set(to, nextKey, propValue, true).\n          Set(realm, to, nextKey, propValue, true);\n        }\n      }\n    }\n\n    // 5. Return to.\n    if (to_must_be_partial) to.makePartial();\n    return to;\n  });\n\n  // ECMA262 19.1.2.2\n  func.defineNativeMethod(\"create\", 2, (context, [O, Properties]) => {\n    // 1. If Type(O) is neither Object nor Null, throw a TypeError exception.\n    if (!HasSomeCompatibleType(realm, O, ObjectValue, NullValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let obj be ObjectCreate(O).\n    let obj = ObjectCreate(realm, ((O.throwIfNotConcrete(): any): ObjectValue | NullValue));\n\n    // 3. If Properties is not undefined, then\n    if (!Properties.mightBeUndefined()) {\n      // a. Return ? ObjectDefineProperties(obj, Properties).\n      return ObjectDefineProperties(realm, obj, Properties);\n    }\n    Properties.throwIfNotConcrete();\n\n    // 4. Return obj.\n    return obj;\n  });\n\n  // ECMA262 19.1.2.3\n  func.defineNativeMethod(\"defineProperties\", 2, (context, [O, Properties]) => {\n    // 1. Return ? ObjectDefineProperties(O, Properties).\n    return ObjectDefineProperties(realm, O, Properties);\n  });\n\n  // ECMA262 19.1.2.4\n  func.defineNativeMethod(\"defineProperty\", 3, (context, [O, P, Attributes]) => {\n    // 1. If Type(O) is not Object, throw a TypeError exception.\n    if (!O.mightBeObject()) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n    O = O.throwIfNotObject();\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? ToPropertyDescriptor(Attributes).\n    let desc = ToPropertyDescriptor(realm, Attributes);\n\n    // 4. Perform ? DefinePropertyOrThrow(O, key, desc).\n    DefinePropertyOrThrow(realm, (O: any), key, desc);\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.5\n  func.defineNativeMethod(\"freeze\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"frozen\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.6\n  func.defineNativeMethod(\"getOwnPropertyDescriptor\", 2, (context, [O, P]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObjectPartial(realm, O);\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? obj.[[GetOwnProperty]](key).\n    let desc = obj.$GetOwnProperty(key);\n\n    // 4. Return FromPropertyDescriptor(desc).\n    return FromPropertyDescriptor(realm, desc);\n  });\n\n  // ECMA262 19.1.2.7\n  func.defineNativeMethod(\"getOwnPropertyNames\", 1, (context, [O]) => {\n    // 1. Return ? GetOwnPropertyKeys(O, String).\n    return GetOwnPropertyKeys(realm, O, StringValue);\n  });\n\n  // ECMA262 19.1.2.8\n  func.defineNativeMethod(\"getOwnPropertyDescriptors\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObject(realm, O.throwIfNotConcrete());\n\n    // 2. Let ownKeys be ? obj.[[OwnPropertyKeys]]().\n    let ownKeys = obj.$OwnPropertyKeys();\n\n    // 3. Let descriptors be ! ObjectCreate(%ObjectPrototype%).\n    let descriptors = ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n    // 4. Repeat, for each element key of ownKeys in List order,\n    for (let key of ownKeys) {\n      // a. Let desc be ? obj.[[GetOwnProperty]](key).\n      let desc = obj.$GetOwnProperty(key);\n      if (desc !== undefined) ThrowIfMightHaveBeenDeleted(desc.value);\n\n      // b. Let descriptor be ! FromPropertyDescriptor(desc).\n      let descriptor = FromPropertyDescriptor(realm, desc);\n\n      // c. If descriptor is not undefined, perform ! CreateDataProperty(descriptors, key, descriptor).\n      if (!(descriptor instanceof UndefinedValue))\n        CreateDataProperty(realm, descriptors, key, descriptor);\n    }\n\n    // 5. Return descriptors.\n    return descriptors;\n  });\n\n  // ECMA262 19.1.2.9\n  func.defineNativeMethod(\"getOwnPropertySymbols\", 1, (context, [O]) => {\n    // Return ? GetOwnPropertyKeys(O, Symbol).\n    return GetOwnPropertyKeys(realm, O, SymbolValue);\n  });\n\n  // ECMA262 19.1.2.10\n  func.defineNativeMethod(\"getPrototypeOf\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObject(realm, O.throwIfNotConcrete());\n\n    // 2. Return ? obj.[[GetPrototypeOf]]().\n    return obj.$GetPrototypeOf();\n  });\n\n  // ECMA262 19.1.2.11\n  func.defineNativeMethod(\"is\", 2, (context, [value1, value2]) => {\n    // 1. Return SameValue(value1, value2).\n    return new BooleanValue(realm, SameValuePartial(realm, value1, value2));\n  });\n\n  // ECMA262 19.1.2.12\n  func.defineNativeMethod(\"isExtensible\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return false.\n    if (!O.mightBeObject()) return realm.intrinsics.false;\n    O = O.throwIfNotObject();\n\n    // 2. Return ? IsExtensible(O).\n    return new BooleanValue(realm, IsExtensible(realm, O));\n  });\n\n  // ECMA262 19.1.2.13\n  func.defineNativeMethod(\"isFrozen\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"frozen\"));\n  });\n\n  // ECMA262 19.1.2.14\n  func.defineNativeMethod(\"isSealed\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"sealed\"));\n  });\n\n  // ECMA262 19.1.2.15\n  func.defineNativeMethod(\"keys\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObject(realm, O.throwIfNotConcrete());\n\n    // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key\").\n    let nameList = EnumerableOwnProperties(realm, obj, \"key\");\n\n    // 3. Return CreateArrayFromList(nameList).\n    return CreateArrayFromList(realm, nameList);\n  });\n\n  // ECMA262 9.1.2.16\n  func.defineNativeMethod(\"values\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObject(realm, O.throwIfNotConcrete());\n\n    // 2. Let nameList be ? EnumerableOwnProperties(obj, \"value\").\n    let nameList = EnumerableOwnProperties(realm, obj, \"value\");\n\n    // 3. Return CreateArrayFromList(nameList).\n    return CreateArrayFromList(realm, nameList);\n  });\n\n  // ECMA262 19.1.2.17\n  func.defineNativeMethod(\"entries\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = ToObject(realm, O.throwIfNotConcrete());\n\n    // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key+value\").\n    let nameList = EnumerableOwnProperties(realm, obj, \"key+value\");\n\n    // 3. Return CreateArrayFromList(nameList).\n    return CreateArrayFromList(realm, nameList);\n  });\n\n  // ECMA262 19.1.2.18\n  func.defineNativeMethod(\"preventExtensions\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? O.[[PreventExtensions]]().\n    O = O.throwIfNotConcreteObject();\n    let status = O.$PreventExtensions();\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.19\n  func.defineNativeMethod(\"seal\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"sealed\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.20\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)) func.defineNativeMethod(\"setPrototypeOf\", 2, (context, [O, proto]) => {\n    // 1. Let O be ? RequireObjectCoercible(O).\n    O = RequireObjectCoercible(realm, O);\n\n    // 2. If Type(proto) is neither Object nor Null, throw a TypeError exception.\n    if (!HasSomeCompatibleType(realm, proto, ObjectValue, NullValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 3. If Type(O) is not Object, return O.\n    O = O.throwIfNotConcrete();\n    if (!(O instanceof ObjectValue)) return O;\n\n    // 4. Let status be ? O.[[SetPrototypeOf]](proto).\n    let status = O.$SetPrototypeOf(((proto: any): ObjectValue | NullValue));\n\n    // 5. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 6. Return O.\n    return O;\n  });\n\n  return func;\n}\n"]}