{"version":3,"sources":["../../../src/intrinsics/ecma262/Math.js"],"names":["realm","obj","intrinsics","ObjectPrototype","defineNativeProperty","SymbolToStringTag","writable","defineNativeConstant","functions","isCompatibleWith","MOBILE_JSC_VERSION","push","name","length","defineNativeMethod","context","args","originalLength","some","arg","every","r","buildMathTemplates","get","undefined","names","Array","map","_","i","f","join","set","createAbstract","topVal","mapping","nodes","Math","apply","throwIfNotConcrete","x","y","a","b","buildMathImul","A","B","imul","mathRandomGenerator","isPartial","deriveAbstract","buildMathRandom","random","Map"],"mappings":"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","file":"Math.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { StringValue, ObjectValue, NumberValue, AbstractValue } from \"../../values/index.js\";\nimport { ToNumber, ToUint32, IsToNumberPure } from \"../../methods/index.js\";\nimport { TypesDomain, ValuesDomain } from \"../../domains/index.js\";\nimport invariant from \"../../invariant.js\";\nimport buildExpressionTemplate from \"../../utils/builder.js\";\n\nlet buildMathRandom = buildExpressionTemplate(\"Math.random()\");\nlet buildMathImul = buildExpressionTemplate(\"Math.imul(A, B)\");\nlet buildMathTemplates : Map<string, {f: Function, names: Array<string>}> = new Map();\n\nexport default function (realm: Realm): ObjectValue {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"Math\");\n\n  // ECMA262 20.2.1.9\n  obj.defineNativeProperty(realm.intrinsics.SymbolToStringTag, new StringValue(realm, \"Math\"), { writable: false });\n\n  // ECMA262 20.2.1.1\n  obj.defineNativeConstant(\"E\", new NumberValue(realm, 2.7182818284590452354));\n\n  // ECMA262 20.2.1.2\n  obj.defineNativeConstant(\"LN10\", new NumberValue(realm, 2.302585092994046));\n\n  // ECMA262 20.2.1.3\n  obj.defineNativeConstant(\"LN2\", new NumberValue(realm, 0.6931471805599453));\n\n  // ECMA262 20.2.1.4\n  obj.defineNativeConstant(\"LOG10E\", new NumberValue(realm, 0.4342944819032518));\n\n  // ECMA262 20.2.1.5\n  obj.defineNativeConstant(\"LOG2E\", new NumberValue(realm, 1.4426950408889634));\n\n  // ECMA262 20.2.1.6\n  obj.defineNativeConstant(\"PI\", new NumberValue(realm, 3.1415926535897932));\n\n  // ECMA262 20.2.1.7\n  obj.defineNativeConstant(\"SQRT1_2\", new NumberValue(realm, 0.7071067811865476));\n\n  // ECMA262 20.2.1.8\n  obj.defineNativeConstant(\"SQRT2\", new NumberValue(realm, 1.4142135623730951));\n\n  let functions = [\n    // ECMA262 20.2.2.1\n    [\"abs\", 1],\n\n    // ECMA262 20.2.2.2\n    [\"acos\", 1],\n\n    // ECMA262 20.2.2.3\n    [\"acosh\", 1],\n\n    // ECMA262 20.2.2.4\n    [\"asin\", 1],\n\n    // ECMA262 20.2.2.5\n    [\"asinh\", 1],\n\n    // ECMA262 20.2.2.6\n    [\"atan\", 1],\n\n    // ECMA262 20.2.2.7\n    [\"atanh\", 1],\n\n    // ECMA262 20.2.2.8\n    [\"atan2\", 2],\n\n    // ECMA262 20.2.2.9\n    [\"cbrt\", 1],\n\n    // ECMA262 20.2.2.10\n    [\"ceil\", 1],\n\n    // ECMA262 20.2.2.12\n    [\"cos\", 1],\n\n    // ECMA262 20.2.2.13\n    [\"cosh\", 1],\n\n    // ECMA262 20.2.2.14\n    [\"exp\", 1],\n\n    // ECMA262 20.2.2.15\n    [\"expm1\", 1],\n\n    // ECMA262 20.2.2.16\n    [\"floor\", 1],\n\n    // ECMA262 20.2.2.17\n    [\"fround\", 1],\n\n    // ECMA262 20.2.2.18\n    [\"hypot\", 2],\n\n    // ECMA262 20.2.2.20\n    [\"log\", 1],\n\n    // ECMA262 20.2.2.21\n    [\"log1p\", 1],\n\n    // ECMA262 20.2.2.22\n    [\"log10\", 1],\n\n    // ECMA262 20.2.2.23\n    [\"log2\", 1],\n\n    // ECMA262 20.2.2.24 ( _value1_, _value2_, ..._values_ )\n    [\"max\", 2],\n\n    // ECMA262 20.2.2.25\n    [\"min\", 2],\n\n    // ECMA262 20.2.2.26\n    [\"pow\", 2],\n\n    // ECMA262 20.2.2.28\n    [\"round\", 1],\n\n    // ECMA262 20.2.2.30\n    [\"sin\", 1],\n\n    // ECMA262 20.2.2.31\n    [\"sinh\", 1],\n\n    // ECMA262 20.2.2.32\n    [\"sqrt\", 1],\n\n    // ECMA262 20.2.2.33\n    [\"tan\", 1],\n\n    // ECMA262 20.2.2.34\n    [\"tanh\", 1],\n\n    // ECMA262 20.2.2.35\n    [\"trunc\", 1]\n  ];\n\n  // ECMA262 20.2.2.11\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)) functions.push([\"clz32\", 1]);\n\n  // ECMA262 20.2.2.29 (_x_)\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)) functions.push([\"sign\", 1]);\n\n  for (let [name, length] of functions) {\n    obj.defineNativeMethod(name, length, (context, args, originalLength) => {\n      args.length = originalLength;\n      if (args.some(arg => arg instanceof AbstractValue) && args.every(arg => IsToNumberPure(realm, arg))) {\n        let r = buildMathTemplates.get(name);\n        if (r === undefined) {\n          let names = [...new Array(args.length)].map((_, i) => `X${i}`);\n          let f = buildExpressionTemplate(`Math.${name}(${names.join(\", \")})`);\n          buildMathTemplates.set(name, r = { f, names });\n        }\n\n        return realm.createAbstract(new TypesDomain(NumberValue), ValuesDomain.topVal, args, nodes => {\n          invariant(r !== undefined);\n          let mapping = {};\n          for (let i = 0; i < nodes.length; i++) mapping[r.names[i]] = nodes[i];\n          return r.f(mapping);\n        });\n      }\n\n      return new NumberValue(realm, Math[name].apply(null, args.map((arg, i) => ToNumber(realm, arg.throwIfNotConcrete()))));\n    });\n  }\n\n\n  // ECMA262 20.2.2.19\n  obj.defineNativeMethod(\"imul\", 2, (context, [x, y]) => {\n    if ((x instanceof AbstractValue || y instanceof AbstractValue) &&\n      IsToNumberPure(realm, x) && IsToNumberPure(realm, y)) {\n      return realm.createAbstract(new TypesDomain(NumberValue), ValuesDomain.topVal, [x, y], ([a, b]) => buildMathImul({ A: a, B: b }));\n    }\n\n    return new NumberValue(realm, Math.imul(ToUint32(realm, x.throwIfNotConcrete()), ToUint32(realm, y.throwIfNotConcrete())));\n  });\n\n  // ECMA262 20.2.2.27\n  obj.defineNativeMethod(\"random\", 0, (context) => {\n    if (realm.mathRandomGenerator !== undefined) {\n      return new NumberValue(realm, realm.mathRandomGenerator());\n    } else if (realm.isPartial) {\n      return realm.deriveAbstract(new TypesDomain(NumberValue), ValuesDomain.topVal, [], buildMathRandom);\n    } else {\n      return new NumberValue(realm, Math.random());\n    }\n  });\n\n  return obj;\n}\n"]}