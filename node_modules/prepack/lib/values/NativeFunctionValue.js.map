{"version":3,"sources":["../../src/values/NativeFunctionValue.js"],"names":["NativeFunctionValue","realm","intrinsicName","name","length","callback","constructor","$Call","thisArgument","argsList","$Realm","$ConstructorKind","$Construct","argumentsList","newTarget","undefined","$Environment","$GlobalEnv","$Strict","$DefineOwnProperty","value","writable","configurable","enumerable","$Description","context","originalLength","i","intrinsics"],"mappings":";;;;;;;;AAaA;;AAEA;;AACA;;;;;;+eAhBA;;;;;;;;;IAoBqBA,mB;;;AACnB,+BAAYC,KAAZ,EAA0BC,aAA1B,EAAwDC,IAAxD,EAA2FC,MAA3F,EAA2GC,QAA3G,EAA2K;AAAA,QAA9BC,WAA8B,uEAAN,IAAM;;AAAA;;AAAA,0IACnKL,KADmK,EAC5JC,aAD4J;;AAGzK,UAAKK,KAAL,GAAa,UAACC,YAAD,EAAeC,QAAf,EAA4B;AACvC,aAAO,qBAAM,MAAKC,MAAX,SAAyBF,YAAzB,EAAuCC,QAAvC,CAAP;AACD,KAFD;;AAIA,QAAIH,WAAJ,EAAiB;AACf,YAAKK,gBAAL,GAAwB,MAAxB;AACA,YAAKC,UAAL,GAAkB,UAACC,aAAD,EAAgBC,SAAhB,EAA8B;AAC9C,eAAO,0BAAW,MAAKJ,MAAhB,SAA8BG,aAA9B,EAA6CC,SAA7C,CAAP;AACD,OAFD;AAGD,KALD,MAKO;AACL,YAAKH,gBAAL,GAAwBI,SAAxB;AACA,YAAKH,UAAL,GAAkBG,SAAlB;AACD;;AAED,UAAKC,YAAL,GAAoBf,MAAMgB,UAA1B;AACA,UAAKC,OAAL,GAAe,IAAf;;AAEA,UAAKb,QAAL,GAAgBA,QAAhB;AACA,UAAKD,MAAL,GAAgBA,MAAhB;;AAEA,UAAKe,kBAAL,CAAwB,QAAxB,EAAkC;AAChCC,aAAO,uBAAgBnB,KAAhB,EAAuBG,MAAvB,CADyB;AAEhCiB,gBAAU,KAFsB;AAGhCC,oBAAc,IAHkB;AAIhCC,kBAAY;AAJoB,KAAlC;;AAOA,QAAIpB,IAAJ,EAAU;AACR,YAAKA,IAAL,GAAYA,4CAAkCA,KAAKqB,YAAL,IAAqB,QAAvD,UAAqErB,IAAjF;AACA,YAAKgB,kBAAL,CAAwB,MAAxB,EAAgC;AAC9BC,eAAO,uBAAgBnB,KAAhB,EAAuB,MAAKE,IAA5B,CADuB;AAE9BkB,kBAAU,KAFoB;AAG9BC,sBAAc,IAHgB;AAI9BC,oBAAY;AAJkB,OAAhC;AAMD,KARD,MAQO;AACL,YAAKpB,IAAL,GAAY,QAAZ;AACD;AAxCwK;AAyC1K;;;;iCAMYsB,O,EAAyEhB,Q,EAAwBK,S,EAAkD;AAC9J,UAAIY,iBAAiBjB,SAASL,MAA9B;AACA,WAAK,IAAIuB,IAAI,CAAb,EAAgBA,IAAI,KAAKvB,MAAzB,EAAiCuB,GAAjC,EAAsC;AACpClB,iBAASkB,CAAT,IAAclB,SAASkB,CAAT,KAAe,KAAKjB,MAAL,CAAYkB,UAAZ,CAAuBb,SAApD;AACD;AACD,aAAO,kCAAqB,KAAKV,QAAL,CAAcoB,OAAd,EAAuBhB,QAAvB,EAAiCiB,cAAjC,EAAiDZ,SAAjD,CAArB,CAAP;AACD;;AAED;;;;;;;kBAxDmBd,mB","file":"NativeFunctionValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Value } from \"./index.js\";\nimport type { Realm } from \"../realm.js\";\nimport { SymbolValue } from \"./index.js\";\nimport { NumberValue, StringValue, FunctionValue, ObjectValue, NullValue, ProxyValue, UndefinedValue, AbstractObjectValue } from \"./index.js\";\nimport { ReturnCompletion } from \"../completions.js\";\nimport { $Call, $Construct } from \"../methods/function.js\";\n\nexport type NativeFunctionCallback = (context: UndefinedValue | NullValue | ObjectValue | AbstractObjectValue, args: Array<Value>, argLength: number, newTarget?: void | ObjectValue) => Value;\n\nexport default class NativeFunctionValue extends FunctionValue {\n  constructor(realm: Realm, intrinsicName: void | string, name: void | string | SymbolValue, length: number, callback: NativeFunctionCallback, constructor?: boolean = true) {\n    super(realm, intrinsicName);\n\n    this.$Call = (thisArgument, argsList) => {\n      return $Call(this.$Realm, this, thisArgument, argsList);\n    };\n\n    if (constructor) {\n      this.$ConstructorKind = \"base\";\n      this.$Construct = (argumentsList, newTarget) => {\n        return $Construct(this.$Realm, this, argumentsList, newTarget);\n      };\n    } else {\n      this.$ConstructorKind = undefined;\n      this.$Construct = undefined;\n    }\n\n    this.$Environment = realm.$GlobalEnv;\n    this.$Strict = true;\n\n    this.callback = callback;\n    this.length   = length;\n\n    this.$DefineOwnProperty(\"length\", {\n      value: new NumberValue(realm, length),\n      writable: false,\n      configurable: true,\n      enumerable: false\n    });\n\n    if (name) {\n      this.name = name instanceof SymbolValue ? `[${name.$Description || \"native\"}]` : name;\n      this.$DefineOwnProperty(\"name\", {\n        value: new StringValue(realm, this.name),\n        writable: false,\n        configurable: true,\n        enumerable: false\n      });\n    } else {\n      this.name = \"native\";\n    }\n  }\n\n  name: string;\n  callback: NativeFunctionCallback;\n  length: number;\n\n  callCallback(context: UndefinedValue | NullValue | ObjectValue | AbstractObjectValue, argsList: Array<Value>, newTarget?: void | ObjectValue): ReturnCompletion {\n    let originalLength = argsList.length;\n    for (let i = 0; i < this.length; i++) {\n      argsList[i] = argsList[i] || this.$Realm.intrinsics.undefined;\n    }\n    return new ReturnCompletion(this.callback(context, argsList, originalLength, newTarget));\n  }\n\n  // for Proxy\n  $RevocableProxy: void | NullValue | ProxyValue;\n}\n"]}