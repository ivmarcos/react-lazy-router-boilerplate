{"version":3,"sources":["../../src/values/ConcreteValue.js"],"names":["ConcreteValue","realm","intrinsicName","$Realm","intrinsics","undefined","throwIfNotObject"],"mappings":";;;;;;;;AAYA;;AACA;;;;;;;;;;+eAbA;;;;;;;;;IAeqBA,a;;;AACnB,yBAAYC,KAAZ,EAA0BC,aAA1B,EAAkD;AAAA;;AAChD,6BAAUD,KAAV,EAAiB,gBAAjB;AADgD,yHAE1CA,KAF0C,EAEnCC,aAFmC;AAGjD;;;;oCAEwB;AACvB,aAAO,kCAAP;AACD;;;uCAE2B;AAC1B,aAAO,EAAE,kCAAF,CAAP;AACD;;;uCAE2B;AAC1B,aAAO,EAAE,kCAAF,CAAP;AACD;;;oCAEwB;AACvB,aAAO,kCAAP;AACD;;;uCAE2B;AAC1B,aAAO,EAAE,kCAAF,CAAP;AACD;;;uCAE2B;AAC1B,aAAO,qCAAP;AACD;;;2CAE+B;AAC9B,aAAO,iCAAP;AACD;;;8CAEgC;AAC/B,UAAI,iCAAJ,EAAgC,OAAO,KAAKC,MAAL,CAAYC,UAAZ,CAAuBC,SAA9B;AAChC,aAAO,IAAP;AACD;;;yCAEmC;AAClC,aAAO,IAAP;AACD;;;+CAEuC;AACtC,+BAAU,KAAV,EAAiB,0CAAjB;AACD;;;+CAEuC;AACtC,aAAO,KAAKC,gBAAL,EAAP;AACD;;;uCAE+B;AAC9B,+BAAU,KAAV,EAAiB,2CAAjB;AACD;;;;;;kBArDkBN,a","file":"ConcreteValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport { EmptyValue, NumberValue, ObjectValue, StringValue, UndefinedValue, Value } from \"./index.js\";\nimport invariant from \"../invariant.js\";\n\nexport default class ConcreteValue extends Value {\n  constructor(realm: Realm, intrinsicName?: string) {\n    invariant(realm, \"realm required\");\n    super(realm, intrinsicName);\n  }\n\n  mightBeNumber(): boolean {\n    return this instanceof NumberValue;\n  }\n\n  mightNotBeNumber(): boolean {\n    return !(this instanceof NumberValue);\n  }\n\n  mightNotBeObject(): boolean {\n    return !(this instanceof ObjectValue);\n  }\n\n  mightBeObject(): boolean {\n    return this instanceof ObjectValue;\n  }\n\n  mightNotBeString(): boolean {\n    return !(this instanceof StringValue);\n  }\n\n  mightBeUndefined(): boolean {\n    return this instanceof UndefinedValue;\n  }\n\n  mightHaveBeenDeleted(): boolean {\n    return this instanceof EmptyValue;\n  }\n\n  promoteEmptyToUndefined(): Value {\n    if (this instanceof EmptyValue) return this.$Realm.intrinsics.undefined;\n    return this;\n  }\n\n  throwIfNotConcrete(): ConcreteValue {\n    return this;\n  }\n\n  throwIfNotConcreteNumber(): NumberValue {\n    invariant(false, \"expected this to be a number if concrete\");\n  }\n\n  throwIfNotConcreteObject(): ObjectValue {\n    return this.throwIfNotObject();\n  }\n\n  throwIfNotObject(): ObjectValue {\n    invariant(false, \"expected this to be an object if concrete\");\n  }\n\n}\n"]}