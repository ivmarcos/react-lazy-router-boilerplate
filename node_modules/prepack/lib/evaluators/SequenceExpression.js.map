{"version":3,"sources":["../../src/evaluators/SequenceExpression.js"],"names":["ast","strictCode","env","realm","expressions","length","val","node","evaluate","undefined"],"mappings":";;;;;;kBAmBe,UAAUA,GAAV,EAA4CC,UAA5C,EAAiEC,GAAjE,EAA0FC,KAA1F,EAA2H;AACxI,2BAAUH,IAAII,WAAJ,CAAgBC,MAAhB,GAAyB,CAAnC;AACA,MAAIC,YAAJ;AAFwI;AAAA;AAAA;;AAAA;AAGxI,yBAAiBN,IAAII,WAArB,8HAAkC;AAAA,UAAzBG,IAAyB;;AAChCD,YAAM,qBAASH,KAAT,EAAgBD,IAAIM,QAAJ,CAAaD,IAAb,EAAmBN,UAAnB,CAAhB,CAAN;AACD;AALuI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMxI,2BAAUK,QAAQG,SAAlB;AACA,SAAOH,GAAP;AACD,C;;AAZD;;AAEA","file":"SequenceExpression.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { Reference } from \"../environment.js\";\nimport { GetValue } from \"../methods/index.js\";\nimport type { BabelNodeSequenceExpression } from \"babel-types\";\nimport invariant from \"../invariant.js\";\n\nexport default function (ast: BabelNodeSequenceExpression, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value | Reference {\n  invariant(ast.expressions.length > 0);\n  let val;\n  for (let node of ast.expressions) {\n    val = GetValue(realm, env.evaluate(node, strictCode));\n  }\n  invariant(val !== undefined);\n  return val;\n}\n"]}