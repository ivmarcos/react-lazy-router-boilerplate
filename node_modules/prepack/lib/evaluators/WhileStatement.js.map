{"version":3,"sources":["../../src/evaluators/WhileStatement.js"],"names":["ast","strictCode","env","realm","labelSet","evaluate","type","init","test","update","body"],"mappings":";;;;;;kBAiBe,UAAUA,GAAV,EAAwCC,UAAxC,EAA6DC,GAA7D,EAAsFC,KAAtF,EAAoGC,QAApG,EAAiJ;AAC9J,SAAOF,IAAIG,QAAJ,CAAe;AACpBC,UAAM,cADc;AAEpBC,UAAM,IAFc;AAGpBC,UAAMR,IAAIQ,IAHU;AAIpBC,YAAQ,IAJY;AAKpBC,UAAMV,IAAIU;AALU,GAAf,EAMcT,UANd,EAM0BG,QAN1B,CAAP;AAOD,C","file":"WhileStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { Reference } from \"../environment.js\";\nimport type { BabelNodeWhileStatement, BabelNode } from \"babel-types\";\n\nexport default function (ast: BabelNodeWhileStatement, strictCode: boolean, env: LexicalEnvironment, realm: Realm, labelSet: ?Array<string>): Value | Reference {\n  return env.evaluate((({\n    type: \"ForStatement\",\n    init: null,\n    test: ast.test,\n    update: null,\n    body: ast.body\n  }: any): BabelNode), strictCode, labelSet);\n}\n"]}