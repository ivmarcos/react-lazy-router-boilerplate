{"version":3,"sources":["../../src/evaluators/ThrowStatement.js"],"names":["ast","strictCode","env","realm","exprRef","evaluate","argument","exprValue"],"mappings":";;;;;;kBAmBe,UAAUA,GAAV,EAAwCC,UAAxC,EAA6DC,GAA7D,EAAsFC,KAAtF,EAAuH;AACpI,MAAIC,UAAUF,IAAIG,QAAJ,CAAaL,IAAIM,QAAjB,EAA2BL,UAA3B,CAAd;AACA,MAAIM,YAAY,qBAASJ,KAAT,EAAgBC,OAAhB,CAAhB;AACA,QAAM,iCAAoBG,SAApB,CAAN;AACD,C;;AARD;;AACA","file":"ThrowStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { Reference } from \"../environment.js\";\nimport { ThrowCompletion } from \"../completions.js\";\nimport { GetValue } from \"../methods/index.js\";\nimport type { BabelNodeThrowStatement } from \"babel-types\";\n\nexport default function (ast: BabelNodeThrowStatement, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value | Reference {\n  let exprRef = env.evaluate(ast.argument, strictCode);\n  let exprValue = GetValue(realm, exprRef);\n  throw new ThrowCompletion(exprValue);\n}\n"]}