{"version":3,"sources":["../../src/evaluators/TemplateLiteral.js"],"names":["ast","strictCode","env","realm","str","i","quasis","length","elem","value","cooked","expr","expressions","evaluate"],"mappings":";;;;;;kBAqBe,UAAUA,GAAV,EAAyCC,UAAzC,EAA8DC,GAA9D,EAAuFC,KAAvF,EAAwH;AACrI,MAAIC,MAAM,EAAV;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,IAAIM,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AAC1C;AACA,QAAIG,OAAOR,IAAIM,MAAJ,CAAWD,CAAX,CAAX;AACAD,WAAOI,KAAKC,KAAL,CAAWC,MAAlB;;AAEA;AACA,QAAIC,OAAOX,IAAIY,WAAJ,CAAgBP,CAAhB,CAAX;AACA,QAAIM,IAAJ,EAAU;AACRP,aAAO,6BAAgBD,KAAhB,EAAuB,2BAASA,KAAT,EAAgBD,IAAIW,QAAJ,CAAaF,IAAb,EAAmBV,UAAnB,CAAhB,CAAvB,CAAP;AACD;AACF;;AAED,SAAO,uBAAgBE,KAAhB,EAAuBC,GAAvB,CAAP;AACD,C;;AAtBD;;AACA;;AACA","file":"TemplateLiteral.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { Reference } from \"../environment.js\";\nimport { StringValue } from \"../values/index.js\";\nimport { ToStringPartial } from \"../methods/index.js\";\nimport { GetValue } from \"../methods/environment.js\";\nimport type { BabelNodeTemplateLiteral } from \"babel-types\";\n\n// ECMA262 12.2.9\nexport default function (ast: BabelNodeTemplateLiteral, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value | Reference {\n  let str = \"\";\n\n  for (let i = 0; i < ast.quasis.length; i++) {\n    // add quasi\n    let elem = ast.quasis[i];\n    str += elem.value.cooked;\n\n    // add expression\n    let expr = ast.expressions[i];\n    if (expr) {\n      str += ToStringPartial(realm, GetValue(realm, env.evaluate(expr, strictCode)));\n    }\n  }\n\n  return new StringValue(realm, str);\n}\n"]}