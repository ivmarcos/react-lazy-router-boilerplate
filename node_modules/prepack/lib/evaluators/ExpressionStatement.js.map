{"version":3,"sources":["../../src/evaluators/ExpressionStatement.js"],"names":["ast","strictCode","env","realm","exprRef","evaluate","expression"],"mappings":";;;;;;kBAkBe,UAAUA,GAAV,EAA6CC,UAA7C,EAAkEC,GAAlE,EAA2FC,KAA3F,EAA4H;AACzI;AACA;AACA,MAAIC,UAAUF,IAAIG,QAAJ,CAAaL,IAAIM,UAAjB,EAA6BL,UAA7B,CAAd;;AAEA;AACA,SAAO,qBAASE,KAAT,EAAgBC,OAAhB,CAAP;AACD,C;;AAVD","file":"ExpressionStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { Reference } from \"../environment.js\";\nimport { GetValue } from \"../methods/index.js\";\nimport type { BabelNodeExpressionStatement } from \"babel-types\";\n\nexport default function (ast: BabelNodeExpressionStatement, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value | Reference {\n  // ECMA262 13.5.1\n  // 1. Let exprRef be the result of evaluating Expression.\n  let exprRef = env.evaluate(ast.expression, strictCode);\n\n  // 2. Return ? GetValue(exprRef).\n  return GetValue(realm, exprRef);\n}\n"]}