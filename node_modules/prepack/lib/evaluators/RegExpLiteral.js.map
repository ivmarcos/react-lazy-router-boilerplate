{"version":3,"sources":["../../src/evaluators/RegExpLiteral.js"],"names":["ast","strictCode","env","realm","pattern","flags","undefined"],"mappings":";;;;;;kBAkBe,UAAUA,GAAV,EAAuCC,UAAvC,EAA4DC,GAA5D,EAAqFC,KAArF,EAAsH;AACnI,SAAO,0BAAaA,KAAb,EAAoB,uBAAgBA,KAAhB,EAAuBH,IAAII,OAA3B,CAApB,EAAyDJ,IAAIK,KAAJ,GAAY,uBAAgBF,KAAhB,EAAuBH,IAAIK,KAA3B,CAAZ,GAAgDC,SAAzG,CAAP;AACD,C;;AAND;;AACA","file":"RegExpLiteral.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Reference } from \"../environment.js\";\nimport { Value, StringValue } from \"../values/index.js\";\nimport { RegExpCreate } from \"../methods/index.js\";\nimport type { BabelNodeRegExpLiteral } from \"babel-types\";\n\nexport default function (ast: BabelNodeRegExpLiteral, strictCode: boolean, env: LexicalEnvironment, realm: Realm): Value | Reference {\n  return RegExpCreate(realm, new StringValue(realm, ast.pattern), ast.flags ? new StringValue(realm, ast.flags) : undefined);\n}\n"]}