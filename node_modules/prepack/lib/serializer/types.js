"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SerializerStatistics = exports.BodyReference = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
opyright (c) 2017-present, Facebook, Inc.
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree. An additional grant
of patent rights can be found in the PATENTS file in the same directory.


exports.AreSameSerializedBindings = AreSameSerializedBindings;

var _index = require("../values/index.js");

var _completions = require("../completions.js");

var _invariant = require("../invariant.js");

var _invariant2 = _interopRequireDefault(_invariant);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function AreSameSerializedBindings(x, y) {
  if (x.serializedValue === y.serializedValue) return true;
  if (x.value && x.value === y.value) return true;
  return false;
}

var BodyReference = exports.BodyReference = function () {
  function BodyReference(body, index) {
    _classCallCheck(this, BodyReference);

    (0, _invariant2.default)(index >= 0);
    this.body = body;
    this.index = index;
  }

  _createClass(BodyReference, [{
    key: "isNotEarlierThan",
    value: function isNotEarlierThan(other) {
      return this.body === other.body && this.index >= other.index;
    }
  }]);

  return BodyReference;
}();

var SerializerStatistics = exports.SerializerStatistics = function () {
  function SerializerStatistics() {
    _classCallCheck(this, SerializerStatistics);

    this.objects = 0;
    this.objectProperties = 0;
    this.functions = 0;
    this.functionClones = 0;
    this.referentialized = 0;
    this.valueIds = 0;
    this.valueIdsElided = 0;
  }

  _createClass(SerializerStatistics, [{
    key: "log",
    value: function log() {
      console.log("=== serialization statistics");
      console.log(this.objects + " objects with " + this.objectProperties + " properties");
      console.log(this.functions + " functions plus " + this.functionClones + " clones due to captured variables; " + this.referentialized + " captured mutable variables");
      console.log(this.valueIds + " value ids generated and " + this.valueIdsElided + " elided");
    }
  }]);

  return SerializerStatistics;
}();
//# sourceMappingURL=types.js.map