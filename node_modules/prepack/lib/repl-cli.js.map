{"version":3,"sources":["../src/repl-cli.js"],"names":["repl","require","serialize","realm","res","context","pushContext","err","value","intrinsics","Error","stack","popContext","start","prompt","input","process","stdin","output","stdout","eval","code","filename","callback","$GlobalEnv","execute","console","log"],"mappings":";;AAWA;;AACA;;AAEA;;AACA;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX,C,CApBA;;;;;;;;;AAsBA,SAASC,SAAT,CAAmBC,KAAnB,EAAiCC,GAAjC,EAAqE;AACnE,MAAIA,OAAOA,4BAAX,EAAiC;AAC/B,WAAOA,IAAIF,SAAJ,EAAP;AACD;;AAED,MAAIE,OAAOA,2CAAX,EAA2C;AACzC,QAAIC,UAAU,6BAAd;AACAF,UAAMG,WAAN,CAAkBD,OAAlB;AACA,QAAIE,YAAJ;AACA,QAAI;AACF,UAAIC,QAAQJ,IAAII,KAAhB;AACA,UAAIA,wCACA,+BAAmBL,KAAnB,EAA0BK,KAA1B,EAAiCL,MAAMM,UAAN,CAAiBC,KAAlD,CADJ,EAC8D;AAC5DH,cAAM,IAAIG,KAAJ,CAAU,4BAAgBP,KAAhB,EAAuB,gBAAIA,KAAJ,EAAWK,KAAX,EAAkB,SAAlB,CAAvB,CAAV,CAAN;AACAD,YAAII,KAAJ,GAAY,4BAAgBR,KAAhB,EAAuB,gBAAIA,KAAJ,EAAWK,KAAX,EAAkB,OAAlB,CAAvB,CAAZ;AACD,OAJD,MAIO;AACLD,cAAM,IAAIG,KAAJ,CAAU,4BAAgBP,KAAhB,EAAuBK,KAAvB,CAAV,CAAN;AACD;AACF,KATD,SASU;AACRL,YAAMS,UAAN,CAAiBP,OAAjB;AACD;AACD,WAAOE,GAAP;AACD;;AAED,SAAOH,GAAP;AACD;;AAED,IAAID,QAAQ,gCAAZ;AACA,uBAAkBA,KAAlB;;AAEAH,KAAKa,KAAL,CAAW;AACTC,UAAQ,IADC;AAETC,SAAOC,QAAQC,KAFN;AAGTC,UAAQF,QAAQG,MAHP;AAITC,MAJS,iBAIJC,IAJI,EAIEhB,OAJF,EAIWiB,QAJX,EAIqBC,QAJrB,EAI+B;AACtC,QAAI;AACF,UAAInB,MAAMD,MAAMqB,UAAN,CAAiBC,OAAjB,CAAyBJ,IAAzB,EAA+B,MAA/B,CAAV;AACAjB,YAAMF,UAAUC,KAAV,EAAiBC,GAAjB,CAAN;AACA,UAAIA,eAAeM,KAAnB,EAA0B;AACxBa,iBAASnB,GAAT;AACD,OAFD,MAEO;AACLmB,iBAAS,IAAT,EAAenB,GAAf;AACD;AACF,KARD,CAQE,OAAOG,GAAP,EAAY;AACZmB,cAAQC,GAAR,CAAYpB,GAAZ;AACAgB,eAAShB,GAAT;AACD;AACF;AAjBQ,CAAX","file":"repl-cli.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm, ExecutionContext } from \"./realm.js\";\nimport { Get } from \"./methods/index.js\";\nimport { ToStringPartial, InstanceofOperator } from \"./methods/index.js\";\nimport { AbruptCompletion, ThrowCompletion } from \"./completions.js\";\nimport { Value, ObjectValue } from \"./values/index.js\";\nimport construct_realm from \"./construct_realm.js\";\nimport initializeGlobals from \"./globals.js\";\n\n// $FlowFixMe: Why does Flow not know about this Node module?\nlet repl = require(\"repl\");\n\nfunction serialize(realm: Realm, res: Value | AbruptCompletion): any {\n  if (res && res instanceof Value) {\n    return res.serialize();\n  }\n\n  if (res && res instanceof ThrowCompletion) {\n    let context = new ExecutionContext();\n    realm.pushContext(context);\n    let err;\n    try {\n      let value = res.value;\n      if (value instanceof ObjectValue &&\n          InstanceofOperator(realm, value, realm.intrinsics.Error)) {\n        err = new Error(ToStringPartial(realm, Get(realm, value, \"message\")));\n        err.stack = ToStringPartial(realm, Get(realm, value, \"stack\"));\n      } else {\n        err = new Error(ToStringPartial(realm, value));\n      }\n    } finally {\n      realm.popContext(context);\n    }\n    return err;\n  }\n\n  return res;\n}\n\nlet realm = construct_realm();\ninitializeGlobals(realm);\n\nrepl.start({\n  prompt: \"> \",\n  input: process.stdin,\n  output: process.stdout,\n  eval(code, context, filename, callback) {\n    try {\n      let res = realm.$GlobalEnv.execute(code, \"repl\");\n      res = serialize(realm, res);\n      if (res instanceof Error) {\n        callback(res);\n      } else {\n        callback(null, res);\n      }\n    } catch (err) {\n      console.log(err);\n      callback(err);\n    }\n  }\n});\n"]}