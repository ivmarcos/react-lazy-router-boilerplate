import VNodeFlags from 'inferno-vnode-flags';
export declare type InfernoInput = VNode | null | string | number;
export declare type Ref = (node?: Element | null) => void | null;
export declare type InfernoChildren = string | number | boolean | undefined | VNode | Array<string | number | VNode> | null;
export declare type Type = string | null | Function;
export interface Props {
    children?: InfernoChildren;
    ref?: Ref;
    key?: any;
    className?: string;
    [k: string]: any;
}
export interface Refs {
    onComponentDidMount?: (domNode: Element) => void;
    onComponentWillMount?(): void;
    onComponentShouldUpdate?(lastProps: any, nextProps: any): boolean;
    onComponentWillUpdate?(lastProps: any, nextProps: any): void;
    onComponentDidUpdate?(lastProps: any, nextProps: any): void;
    onComponentWillUnmount?(domNode: Element): void;
}
export interface VNode {
    children: InfernoChildren;
    dom: Element | null;
    className: string;
    flags: VNodeFlags;
    key: any;
    props: Props | null;
    ref: Ref;
    type: Type;
    parentVNode?: VNode;
}
/**
 * Creates virtual node
 * @param {number} flags
 * @param {string|Function|null} type
 * @param {string|null=} className
 * @param {object=} children
 * @param {object=} props
 * @param {*=} key
 * @param {object|Function=} ref
 * @param {boolean=} noNormalise
 * @returns {VNode} returns new virtual node
 */
export declare function createVNode(flags: VNodeFlags, type: Type, className?: string | null, children?: InfernoChildren, props?: Props | null, key?: any, ref?: Ref, noNormalise?: boolean): any;
export declare function directClone(vNodeToClone: VNode): VNode;
/**
 * Clones given virtual node by creating new instance of it
 * @param {VNode} vNodeToClone virtual node to be cloned
 * @param {Props=} props additional props for new virtual node
 * @param {...*} _children new children for new virtual node
 * @returns {VNode} new virtual node
 */
export declare function cloneVNode(vNodeToClone: VNode, props?: Props, ..._children: InfernoChildren[]): VNode;
export declare function createVoidVNode(): VNode;
export declare function createTextVNode(text: string | number, key: any): VNode;
export declare function isVNode(o: VNode): boolean;
